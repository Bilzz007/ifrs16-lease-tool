name: Dev Quality Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pandas-stubs types-python-dateutil types-cachetools types-colorama types-jsonschema types-openpyxl types-protobuf types-pycurl types-toml
          pip install ruff
          pip install no-implicit-optional

      - name: 🧹 Autoflake cleanup
        run: |
          autoflake --remove-all-unused-imports --remove-unused-variables \
                   --expand-star-imports -r -i .

      - name: 🔀 Isort (sort imports)
        run: isort .

      - name: 🛠 Docformatter (auto-fix docstrings)
        run: |
          find . -name "*.py" -print0 | xargs -0 -n1 docformatter --in-place || echo "Some files skipped"

      - name: 🖤 Black (final formatting pass)
        run: black .

      - name: 🔂 Strip trailing whitespace
        run: find . -name "*.py" -exec sed -i 's/[ \t]*$//' {} +

      - name: 🤖 Ruff (style/type autofix)
        run: ruff check . --fix

      - name: 🛠 Fix Optional defaults (no-implicit-optional)
        run: python -m no_implicit_optional .

      - name: 🔍 Flake8 (lint)
        run: flake8 .

      - name: 🧠 Mypy (type checks)
        run: |
          mypy --install-types --non-interactive . || true
          mypy --strict --disallow-untyped-defs --warn-return-any --ignore-missing-imports .

      - name: 🔐 Bandit (security checks)
        run: bandit -r . -x tests

      - name: 🧪 Pytest (unit tests)
        run: pytest

      - name: 📊 Coverage (test coverage)
        run: |
          coverage run -m pytest
          coverage report -m

      - name: 📦 Install Pyright
        run: npm install -g pyright

      - name: 🔎 Pyright (static type inference)
        run: pyright
